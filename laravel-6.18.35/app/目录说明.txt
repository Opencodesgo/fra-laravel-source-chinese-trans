
============================================================================
应用目录
============================================================================
主要包含应用程序的核心代码，用户构建应用的部分工作都在这个目录下进行，包括中由文件、控制器文件、模型文件等。
============================================================================

app 目录下包含多个子目录
----------------------------------------
Broadcasting 目录包含了应用所需的所有广播频道类。
该目录默认不存在，但是当你通过命令第一次创建频道类时会自动生成。

Console 
目录包含应用所有自定义的 artisan 命令。
该目录下还有 Console/Kernel 类，在这里可以注册自定义的 Artisan 命令以及定义调度任务。

Events 
用来放置与事件相关的类。
事件类用于告知应用其他部分某个事件发生情况并提供灵活的、解耦的处理机制。

Exceptions 
包含应用程序的异常处理类，用于处理应用程序抛出的任何异常。

Http 
主要包含路由文件、控制器文件、请求文件、中间文件等，是应用程序与Laravel框架源代码等外部库交互的主要地方。

Jobs 
主要包含消息队列的各种消息类文件。
目录用于存放队列任务，应用中的任务可以被推送到队列，也可以在当前请求生命周期内同步执行。同步执行的任务有时也被看作命令，因为它们实现了命令模式。

Listeners 
主要包含监听事件类文件。
目录包含处理事件的类（事件监听器），事件监听器接收一个事件并提供对该事件发生后的响应逻辑。

Mail 目录包含应用所有邮件相关类，邮件对象允许你在一个地方封装邮件所需的所有业务逻辑，然后使用 Mail::send 方法发送邮件。

Notifications 
目录包含应用发送的所有通知，比如事件发生通知。Laravel 的通知功能将通知发送和通知驱动解耦，也可以通过邮件，也可以通过 Slack、短信或者数据库发送通知。

Policies 
主要包含服务提供者的相关文件。
目录包含了应用所有的授权策略类，策略用于判断某个用户是否有权限云访问指定资源。

Providers 
主要包含服务提供者的相关文件。
目录包含应用的所有服务提供者。服务提供者在应用启动过程中绑定服务到容器、注册事件以及执行其他任务即将到来的请求处理好准备工作。

Rules 
目录包含应用的自定义验证规则对象，这些规则用于在单个对象中封装复杂的验证逻辑

============================================================================

补充说明：
由于app目录已经通过 composer 包含到自动加载目录中，所以在此目录下新建目录时不需要
再更新自动加载类就可以索引到，但是类的命名空间需要与文件目录相符。

============================================================================

